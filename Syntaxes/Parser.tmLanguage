<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>p</string>
		<string>pp</string>
		<string>bp</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(/\*|(\{|\[|\()\s*$)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|^\s*(\}|\]|\)))</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Parser</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\^rem{</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>comment.block.parser</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#nested_braces</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(@)(CLASS)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.parser</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\w+)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.parser</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.parser</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(@)(BASE)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.parser</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\w+)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.parser</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.inheritance.parser</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(@)(USE)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.parser</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\w\.]+)\b</string>
			<key>name</key>
			<string>meta.class.inheritance.parser</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.function.parser</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.parser</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.parser</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.parser</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.parser</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.parser</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>variable.local.parameter.function.parser</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.parser</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(@)(\w+)(\[)([\w;]*)(\])(?:(\[)([^;]*)(\]))?</string>
			<key>name</key>
			<string>meta.function.parser</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(?=(\t| {4}))</string>
			<key>end</key>
			<string>(?=[^\t\s])</string>
			<key>name</key>
			<string>meta.leading-tabs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.odd-tab</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.even-tab</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\t| {4})(\t| {4})?</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)\-[rd]\b</string>
			<key>name</key>
			<string>keyword.operator.filetest.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|or|xor|as)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(&lt;=|&lt;=&gt;|&gt;=|-&gt;)</string>
			<key>name</key>
			<string>keyword.operator.comparison.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(&amp;&amp;|==)</string>
			<key>name</key>
			<string>keyword.operator.logical.compare.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)(eq|ne)\b</string>
			<key>name</key>
			<string>keyword.operator.string.compare.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|switch|case|use|throw|def|try)\b</string>
			<key>name</key>
			<string>keyword.control.parser</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.parser</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.parser</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.parser</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\.(match)(\[)([^]]*?)(\])</string>
			<key>name</key>
			<string>string.regexp.find.parser</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int|do|else|for|foreach|if|while|switch|case|use|def|rem|match|taint|untaint|throw|try|delete})\b</string>
			<key>name</key>
			<string>support.function.parser</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.basic</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.parser</string>
		</dict>
		<key>line_comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.number-sign.parser</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.parser</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^((#).*$)\n?</string>
					<key>name</key>
					<string>meta.comment.full-line.parser</string>
				</dict>
			</array>
		</dict>
		<key>nested_braces</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_braces</string>
				</dict>
			</array>
		</dict>
		<key>nested_braces_interpolated</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_braces_interpolated</string>
				</dict>
			</array>
		</dict>
		<key>nested_brackets</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_brackets</string>
				</dict>
			</array>
		</dict>
		<key>nested_brackets_interpolated</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_brackets_interpolated</string>
				</dict>
			</array>
		</dict>
		<key>nested_parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_parens</string>
				</dict>
			</array>
		</dict>
		<key>nested_parens_interpolated</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.parser</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested_parens_interpolated</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.parser</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)([a-zA-Z_x7f-xff\$])([a-z\-A-Z0-9_.x7f-xff\$])*\b</string>
					<key>name</key>
					<string>variable.other.readwrite.global.parser</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.parser</string>
	<key>uuid</key>
	<string>384CF139-EF5E-4EC6-A621-C3F55B7636E5</string>
</dict>
</plist>
